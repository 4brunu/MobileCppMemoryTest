// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from network.djinni

#include "NativeNetworkRequestCallback.hpp"  // my header
#include "NativeNetworkRequestResponse.hpp"

namespace djinni_generated {

NativeNetworkRequestCallback::NativeNetworkRequestCallback() : ::djinni::JniInterface<::mobilecppmemorytest::NetworkRequestCallback, NativeNetworkRequestCallback>("com/company/mobilecppmemorytest/NetworkRequestCallback$CppProxy") {}

NativeNetworkRequestCallback::~NativeNetworkRequestCallback() = default;


CJNIEXPORT void JNICALL Java_com_company_mobilecppmemorytest_NetworkRequestCallback_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::mobilecppmemorytest::NetworkRequestCallback>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_company_mobilecppmemorytest_NetworkRequestCallback_00024CppProxy_native_1onResponse(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_networkRequestResponse)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::mobilecppmemorytest::NetworkRequestCallback>(nativeRef);
        ref->onResponse(::djinni_generated::NativeNetworkRequestResponse::toCpp(jniEnv, j_networkRequestResponse));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
