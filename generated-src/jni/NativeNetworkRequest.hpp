// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from network.djinni

#pragma once

#include "NetworkRequest.hpp"
#include "djinni_support.hpp"

namespace djinni_generated {

class NativeNetworkRequest final : ::djinni::JniInterface<::mobilecppmemorytest::NetworkRequest, NativeNetworkRequest> {
public:
    using CppType = std::shared_ptr<::mobilecppmemorytest::NetworkRequest>;
    using CppOptType = std::shared_ptr<::mobilecppmemorytest::NetworkRequest>;
    using JniType = jobject;

    using Boxed = NativeNetworkRequest;

    ~NativeNetworkRequest();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeNetworkRequest>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeNetworkRequest>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeNetworkRequest();
    friend ::djinni::JniClass<NativeNetworkRequest>;
    friend ::djinni::JniInterface<::mobilecppmemorytest::NetworkRequest, NativeNetworkRequest>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::mobilecppmemorytest::NetworkRequest
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void httpGetRequest(const std::string & stringUrl, const std::shared_ptr<::mobilecppmemorytest::NetworkRequestCallback> & callback) override;

    private:
        friend ::djinni::JniInterface<::mobilecppmemorytest::NetworkRequest, ::djinni_generated::NativeNetworkRequest>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/company/mobilecppmemorytest/NetworkRequest") };
    const jmethodID method_httpGetRequest { ::djinni::jniGetMethodID(clazz.get(), "httpGetRequest", "(Ljava/lang/String;Lcom/company/mobilecppmemorytest/NetworkRequestCallback;)V") };
};

}  // namespace djinni_generated
